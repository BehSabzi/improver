#!/usr/bin/env python
# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# (C) British Crown Copyright 2017 Met Office.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of the copyright holder nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
"""Script to collapse cube coordinates and calculate percentiled data."""

import argparse

import iris

from improver.percentile import PercentileConverter


def main():
    """Load in arguments and get going."""
    parser = argparse.ArgumentParser(
        description="Calculate percentiled data over a cube coordinate by "
        "collapsing that coordinate. Typically used to convert realization "
        "(member) data into percentiled data, but may calculate over any "
        "dimension coordinate.")
    parser.add_argument("input_filepath", metavar="INPUT_FILE",
                        help="A path to an input NetCDF file to be processed")
    parser.add_argument("output_filepath", metavar="OUTPUT_FILE",
                        help="The output path for the processed NetCDF")
    parser.add_argument("coordinates", metavar="COLLAPSING_COORDINATES",
                        nargs="+",
                        help="Coordinate or coordinates over which to collapse"
                        " data and calculate percentiles; e.g. "
                        "realization   or  latitude longitude")
    parser.add_argument("--percentiles", metavar="PERCENTILES",
                        nargs="+", default=None, type=int,
                        help="Optional definition of percentiles at which"
                        " to calculate data, otherwise default values are"
                        " used, e.g. --percentiles 0 25 50 75 100 ; "
                        " defaults = [0, 5, 10, 20, 25, 30, 40, 50, 60, 70,"
                        " 75, 80, 90, 95, 100]")
    
    args = parser.parse_args()
    cube = iris.load_cube(args.input_filepath)
    result = PercentileConverter(args.coordinates,
                                 percentiles=args.percentiles).process(cube)
    iris.save(result, args.output_filepath, unlimited_dimensions=[])


if __name__ == "__main__":
    main()
